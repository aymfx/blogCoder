import{_ as s,c as n,o as p,b as a}from"./app.f9b4360e.js";const i=JSON.parse('{"title":"\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u7C7B\u578B","description":"","frontmatter":{"title":"\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u7C7B\u578B","date":"2020-10-02T00:00:00.000Z","group":"type-challenges"},"headers":[{"level":2,"title":"\u4E0D\u4F7F\u7528 ReturnType \u5B9E\u73B0 TypeScript \u7684 ReturnType<T> \u6CDB\u578B\u3002","slug":"\u4E0D\u4F7F\u7528-returntype-\u5B9E\u73B0-typescript-\u7684-returntype-t-\u6CDB\u578B\u3002","link":"#\u4E0D\u4F7F\u7528-returntype-\u5B9E\u73B0-typescript-\u7684-returntype-t-\u6CDB\u578B\u3002","children":[]}],"relativePath":"typescript/type-challenges/\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u7C7B\u578B.md"}'),l={name:"typescript/type-challenges/\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u7C7B\u578B.md"},e=a(`<h2 id="\u4E0D\u4F7F\u7528-returntype-\u5B9E\u73B0-typescript-\u7684-returntype-t-\u6CDB\u578B\u3002" tabindex="-1">\u4E0D\u4F7F\u7528 ReturnType \u5B9E\u73B0 TypeScript \u7684 ReturnType&lt;T&gt; \u6CDB\u578B\u3002 <a class="header-anchor" href="#\u4E0D\u4F7F\u7528-returntype-\u5B9E\u73B0-typescript-\u7684-returntype-t-\u6CDB\u578B\u3002" aria-hidden="true">#</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyReturnType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">infer</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">R</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">R</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">never</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">v</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyReturnType</span><span style="color:#89DDFF;">&lt;typeof</span><span style="color:#A6ACCD;"> fn</span><span style="color:#89DDFF;">&gt;;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// \u5E94\u63A8\u5BFC\u51FA &quot;1 | 2&quot;</span></span>
<span class="line"></span></code></pre></div>`,2),o=[e];function t(r,c,y,C,F,D){return p(),n("div",null,o)}const _=s(l,[["render",t]]);export{i as __pageData,_ as default};
