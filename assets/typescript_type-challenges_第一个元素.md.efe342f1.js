import{_ as s,c as n,o as a,b as p}from"./app.f9b4360e.js";const i=JSON.parse('{"title":"\u7B2C\u4E00\u4E2A\u5143\u7D20","description":"","frontmatter":{"title":"\u7B2C\u4E00\u4E2A\u5143\u7D20","date":"2020-10-01T00:00:00.000Z","group":"type-challenges"},"headers":[],"relativePath":"typescript/type-challenges/\u7B2C\u4E00\u4E2A\u5143\u7D20.md"}'),l={name:"typescript/type-challenges/\u7B2C\u4E00\u4E2A\u5143\u7D20.md"},o=p(`<h1 id="\u5B9E\u73B0\u4E00\u4E2A\u901A\u7528-first-\u5B83\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4-t-\u5E76\u8FD4\u56DE\u5B83\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u7C7B\u578B\u3002" tabindex="-1">\u5B9E\u73B0\u4E00\u4E2A\u901A\u7528 First\uFF0C\u5B83\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4 T \u5E76\u8FD4\u56DE\u5B83\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u7C7B\u578B\u3002 <a class="header-anchor" href="#\u5B9E\u73B0\u4E00\u4E2A\u901A\u7528-first-\u5B83\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4-t-\u5E76\u8FD4\u56DE\u5B83\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u7C7B\u578B\u3002" aria-hidden="true">#</a></h1><p>\u4F8B\u5982\uFF1A</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">arr1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">arr2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">First</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">infer</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...infer</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">rest</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">never</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">head1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">First</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">arr1</span><span style="color:#89DDFF;">&gt;;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// expected to be &#39;a&#39;</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">head2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">First</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">arr2</span><span style="color:#89DDFF;">&gt;;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// expected to be 3</span></span>
<span class="line"></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// type First&lt;T extends any[]&gt; = T[&#39;length&#39;] extends 0 ? never : T[0]</span></span>
<span class="line"><span style="color:#676E95;">//infer \u8868\u793A\u5728 extends \u6761\u4EF6\u8BED\u53E5\u4E2D\u5F85\u63A8\u65AD\u7684\u7C7B\u578B\u53D8\u91CF</span></span>
<span class="line"><span style="color:#676E95;">// type First&lt;T extends any[]&gt; = T extends [infer A, ...infer rest] ? A : never</span></span>
<span class="line"><span style="color:#676E95;">// type First&lt;T extends any[]&gt; = T extends [] ? never : T[0];</span></span>
<span class="line"></span></code></pre></div>`,4),e=[o];function t(r,c,y,C,F,D){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{i as __pageData,d as default};
